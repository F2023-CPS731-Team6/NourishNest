API calls:
api/register       - register user, post request must be sent with json data with "username", "password" and "email" keys
api/login          - login user, post request must be sent with json data with "username" and "password" keys
                   - { "username" : "", "password" : "" }
api/logout         - logout user, post request must be sent, no data required
api/user           - view current user with personal info, get request
api/personalinfo   - view current user personal info, get request
                   - create personal info for current user, post request must be sent with json data with "height" and "weight" keys, optionally, "restriction" key may also be used which expects a list in json format with all the users dietary restrictions
api/personalinfo/update - update personal info for user, no pk required because of one-to-one relationship, put request with updated attributes
                        - ie. this would be valid data for a request to update just the users weight: { 'weight' : float }
api/globalrecipes  - view all global recipes, get request, filter with ? at the end of the api call
                   - ex. http://127.0.0.1:8000/api/globalrecipes?name=Pasta&tags=Italian,Vegetarian&ingredients=Tomato,Sauce
api/savedrecipes  - view all users saved recipes, get request, filter with ? at the end of the api call
                   - ex. http://127.0.0.1:8000/api/savedrecipes?name=Pasta&tags=Italian,Vegetarian&ingredients=Tomato,Sauce
api/savedrecipes/create  - create saved recipe for logged in user, post request
                    - data format: 
                            {
                            "name": "",
                            "tags": [ { "tag": "" } ],
                            "ingredients": [ { "ingredient": "", "quantity": "" } ],
                            "calories": int,
                            "steps": [ { "step": "", "name": "" }],
                            "image" : "path/to/image"
                            }
api/savedrecipes/<int:pk>/delete - delete saved recipe for logged in user, delete request
api/savedrecipes/<int:pk>/update - update saved recipe for logged in user, put request
                                 - send with specfic attribute you want to update
api/scheduled - view all scheduled recipes for current user
api/scheduled/create - create scheduled meal for user, post request, recipe would be id of saved recipe
                     - data format:
                     {"recipe": int, "date": "YYYY-MM-DD"}
api/scheduled/<int:pk>/delete - delete scheduled meal for logged in user, delete request
api/scheduled/<int:pk>/update - update scheduled meal for logged in user, put request
                              - send with specfic attribute you want to update, ie saved recipe id, or date-time


dependencies:
pip install Django djangorestframework django-cors-headers Pillow